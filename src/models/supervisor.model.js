const { DataTypes, Model } = require("sequelize");

/**
 * @class Supervisor
 * @extends Model
 * @classdesc Represents a supervisor (faculty member) in a department.
 * 
 * ðŸ”‘ **Notes:**
 * - Full name is auto-generated by concatenating first, father, grandfather, and family names.
 * - May be linked to an Account (optional) and Profile Image (optional).
 * - Supervises multiple Projects.
 */
class Supervisor extends Model {
    /**
     * Define associations for the Supervisor model.
     * @param {object} models - All sequelize models.
     */
    static associate(models) {
        // Optional link to an Account
        Supervisor.belongsTo(models.Account, { foreignKey: 'account_id' });

        // Optional profile image
        Supervisor.belongsTo(models.File, { foreignKey: 'profile_image_id', as: 'ProfileImage' });

        // Supervisor has many Projects
        Supervisor.hasMany(models.Project, { foreignKey: 'supervisor_id', onDelete: 'SET NULL' });

        // Supervisor belongs to a Department
        Supervisor.belongsTo(models.Department, { foreignKey: 'department_id' });
    }
}

/**
 * Initialize the Supervisor model.
 *
 * @param {import("sequelize").Sequelize} sequelize - Sequelize instance.
 * @returns {typeof Supervisor} Supervisor model.
 */
function SupervisorModel(sequelize) {
    Supervisor.init(
        {
            /**
             * Primary key (UUID)
             * @type {string}
             */
            supervisor_id: {
                type: DataTypes.UUID,
                defaultValue: DataTypes.UUIDV4,
                primaryKey: true,
            },

            /**
             * First name
             * @type {string}
             */
            supervisor_name: { type: DataTypes.STRING(50), allowNull: false },

            /**
             * Father name
             * @type {string}
             */
            supervisor_father_name: { type: DataTypes.STRING(50), allowNull: false },

            /**
             * Grandfather name
             * @type {string}
             */
            supervisor_grandfather_name: { type: DataTypes.STRING(50), allowNull: false },

            /**
             * Family name
             * @type {string}
             */
            supervisor_family_name: { type: DataTypes.STRING(50), allowNull: false },

            /**
             * Full name (auto-generated before save)
             * @type {string}
             */
            supervisor_full_name: { type: DataTypes.STRING(50), allowNull: false },

            /**
             * Academic title (optional)
             * @type {string}
             */
            supervisor_title: { type: DataTypes.STRING(50), allowNull: true },

            /**
             * Email
             * @type {string}
             */
            supervisor_email: { type: DataTypes.STRING(255), allowNull: false },

            /**
             * Foreign key to Department
             * @type {number}
             */
            department_id: { type: DataTypes.INTEGER, allowNull: false },

            /**
             * Optional foreign key to Account
             * @type {string}
             */
            account_id: { type: DataTypes.UUID, allowNull: true, defaultValue: null },

            /**
             * Optional foreign key to Profile Image
             * @type {number}
             */
            profile_image_id: { type: DataTypes.INTEGER, allowNull: true, defaultValue: null },
        },
        {
            sequelize,
            modelName: "Supervisor",
            tableName: "supervisors_tb",
            timestamps: true,
            underscored: true,
        }
    );

    // Hook to auto-generate full name
    Supervisor.beforeSave((supervisor) => {
        supervisor.supervisor_full_name = [
            supervisor.supervisor_name,
            supervisor.supervisor_father_name,
            supervisor.supervisor_grandfather_name,
            supervisor.supervisor_family_name
        ].filter(Boolean).join(' ');
    });

    return Supervisor;
}

module.exports = SupervisorModel;