const { DataTypes, Model } = require("sequelize");

/**
 * @class Student
 * @extends Model
 * @classdesc Represents a university student.
 * 
 * ğŸ”‘ **Notes:**
 * - Full name is auto-generated by concatenating first, father, grandfather, and family names.
 * - Linked to Department, Account (optional), Profile Image (optional), and Projects.
 */
class Student extends Model {
    /**
     * Define associations for the Student model.
     * @param {object} models - All sequelize models.
     */
    static associate(models) {
        // Student belongs to a Department
        Student.belongsTo(models.Department, { foreignKey: 'department_id' });

        // Student may have a Profile Image
        Student.belongsTo(models.File, { foreignKey: 'profile_image_id', as: 'ProfileImage' });

        // Student may be linked to an Account
        Student.belongsTo(models.Account, { foreignKey: 'account_id' });

        // Student belongs to many Projects
        Student.belongsToMany(models.Project, { 
            through: models.ProjectStudent, 
            foreignKey: 'student_id', 
            onDelete: 'CASCADE'
        });
    }
}

/**
 * Initialize the Student model.
 *
 * @param {import("sequelize").Sequelize} sequelize - Sequelize instance.
 * @returns {typeof Student} Student model.
 */
function StudentModel(sequelize) {
    Student.init(
        {
            /**
             * Primary key (UUID)
             * @type {string}
             */
            student_id: {
                type: DataTypes.UUID,
                defaultValue: DataTypes.UUIDV4,
                primaryKey: true,
            },

            /**
             * Student's first name
             * @type {string}
             */
            student_name: { type: DataTypes.STRING(50), allowNull: false },

            /**
             * Student's father name
             * @type {string}
             */
            student_father_name: { type: DataTypes.STRING(50), allowNull: false },

            /**
             * Student's grandfather name
             * @type {string}
             */
            student_grandfather_name: { type: DataTypes.STRING(50), allowNull: false },

            /**
             * Student's family name
             * @type {string}
             */
            student_family_name: { type: DataTypes.STRING(50), allowNull: false },

            /**
             * Full name (auto-generated before save)
             * @type {string}
             */
            student_full_name: { type: DataTypes.STRING(200), allowNull: false },

            /**
             * Student's email
             * @type {string}
             */
            student_email: { type: DataTypes.STRING(255), allowNull: false },

            /**
             * Foreign key to Department
             * @type {number}
             */
            department_id: { type: DataTypes.INTEGER, allowNull: false },

            /**
             * Optional foreign key to Account
             * @type {string}
             */
            account_id: { type: DataTypes.UUID, allowNull: true, defaultValue: null },

            /**
             * Optional foreign key to Profile Image
             * @type {number}
             */
            profile_image_id: { type: DataTypes.INTEGER, allowNull: true, defaultValue: null },
        },
        {
            sequelize,
            modelName: "Student",
            tableName: "students_tb",
            timestamps: true,
            underscored: true,
        }
    );

    // Hook to auto-generate full name
    Student.beforeSave((student) => {
        student.student_full_name = [
            student.student_name,
            student.student_father_name,
            student.student_grandfather_name,
            student.student_family_name
        ].filter(Boolean).join(' ');
    });

    return Student;
}

module.exports = StudentModel;